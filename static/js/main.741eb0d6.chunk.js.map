{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","errors","titleError","empty","imgUrlError","wrongFormat","imdbIdError","validation","handleSubmit","event","preventDefault","props","onAdd","setState","validateField","field","target","name","value","length","prevState","concat","hangleField","this","onSubmit","htmlFor","type","id","onChange","onBlur","bind","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.741eb0d6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    errors: {\n      titleError: {\n        empty: 'er',\n      },\n      imgUrlError: {\n        empty: 'gf',\n        wrongFormat: '',\n      },\n      imdbIdError: {\n        empty: '',\n        wrongFormat: '',\n      },\n    },\n    validation: false,\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const movie = this.state;\n\n    this.props.onAdd(movie);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  validateField = (event) => {\n    const field = event.target.name;\n\n    if (event.target.value.length === 0) {\n      this.setState(prevState => ({\n        ...prevState,\n        errors: { [field.concat('Error')]: { empty: 'is required' } },\n      }));\n    }\n  }\n\n  hangleField = (event) => {\n    const field = event.target.name;\n\n    this.setState({ [field]: event.target.value });\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        className=\"form\"\n      >\n        <fieldset>\n          <legend>New film informanition:</legend>\n          <div className=\"field\">\n            <label htmlFor=\"title\">Title:&nbsp;</label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              name=\"title\"\n              value={title}\n              onChange={this.hangleField}\n            />\n          </div>\n          <div className=\"field\">\n            <label htmlFor=\"description\">Description:&nbsp;</label>\n            <textarea\n              id=\"description\"\n              name=\"description\"\n              className=\"description\"\n              value={description}\n              onChange={this.hangleField}\n            />\n          </div>\n          <div className=\"field\">\n            <label htmlFor=\"imgUrl\">imgUrl:&nbsp;</label>\n            <input\n              type=\"text\"\n              id=\"imgUrl\"\n              name=\"imgUrl\"\n              value={imgUrl}\n              onChange={this.hangleField}\n              onBlur={this.validateField.bind(this)}\n            />\n          </div>\n          <div className=\"field\">\n            <label htmlFor=\"imdbUrl\">imdbUrl:&nbsp;</label>\n            <input\n              type=\"text\"\n              id=\"imdbUrl\"\n              name=\"imdbUrl\"\n              value={imdbUrl}\n              onChange={this.hangleField}\n            />\n          </div>\n          <div className=\"field\">\n            <label htmlFor=\"imdbId\">imdbId:&nbsp;</label>\n            <input\n              type=\"text\"\n              id=\"imdbId\"\n              name=\"imdbId\"\n              value={imdbId}\n              onChange={this.hangleField}\n            />\n          </div>\n        </fieldset>\n        <button\n          type=\"submit\"\n          className=\"\"\n        >\n          Add a film\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [movie, ...state.movies],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}